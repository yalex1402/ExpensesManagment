<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Trips" xml:space="preserve">
    <value>Trips</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="Accept" xml:space="preserve">
    <value>Accept</value>
  </data>
  <data name="InternetConnection" xml:space="preserve">
    <value>Check the internet connection</value>
  </data>
  <data name="Expenses" xml:space="preserve">
    <value>Expenses</value>
  </data>
  <data name="ErrorEmail" xml:space="preserve">
    <value>Email is incorrect</value>
  </data>
  <data name="Ok" xml:space="preserve">
    <value>Ok</value>
  </data>
  <data name="RecoverPassword" xml:space="preserve">
    <value>Recover Password</value>
  </data>
  <data name="Register" xml:space="preserve">
    <value>Register</value>
  </data>
  <data name="ErrorEmptyField" xml:space="preserve">
    <value>The field cannot be empty</value>
  </data>
  <data name="ErrorRole" xml:space="preserve">
    <value>You must select a role</value>
  </data>
  <data name="ErrorPassword" xml:space="preserve">
    <value>Password is incorrect</value>
  </data>
  <data name="ErrorPassword2" xml:space="preserve">
    <value>Passwords aren't the same</value>
  </data>
  <data name="PictureSource" xml:space="preserve">
    <value>Picture source</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="FromGallery" xml:space="preserve">
    <value>From Gallery</value>
  </data>
  <data name="FromCamera" xml:space="preserve">
    <value>From Camera</value>
  </data>
  <data name="ModifyUser" xml:space="preserve">
    <value>Modify User</value>
  </data>
  <data name="UserUpdated" xml:space="preserve">
    <value>User was updated successfully</value>
  </data>
  <data name="ModifyTrip" xml:space="preserve">
    <value>Modify Trip</value>
  </data>
  <data name="ModifyExpense" xml:space="preserve">
    <value>Modify Expense</value>
  </data>
  <data name="TripUpdated" xml:space="preserve">
    <value>Trip was updated successfully</value>
  </data>
  <data name="ExpenseUpdated" xml:space="preserve">
    <value>Expense was updated successfully</value>
  </data>
  <data name="ErrorDate" xml:space="preserve">
    <value>Date selected is invalid</value>
  </data>
  <data name="ErrorValue" xml:space="preserve">
    <value>Expense value is incorrect</value>
  </data>
  <data name="Login" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="ErrorLogin" xml:space="preserve">
    <value>Email or Password are incorrect</value>
  </data>
  <data name="Logout" xml:space="preserve">
    <value>Logout</value>
  </data>
  <data name="MyTrips" xml:space="preserve">
    <value>My Trips</value>
  </data>
  <data name="DeleteTrip" xml:space="preserve">
    <value>Delete this trip</value>
  </data>
  <data name="DeleteExpense" xml:space="preserve">
    <value>Delete this expense</value>
  </data>
  <data name="AddTrip" xml:space="preserve">
    <value>Add a new trip</value>
  </data>
  <data name="AddExpense" xml:space="preserve">
    <value>Add a new expense</value>
  </data>
  <data name="TripDeleted" xml:space="preserve">
    <value>Trip was deleted successfully</value>
  </data>
  <data name="ExpenseDeleted" xml:space="preserve">
    <value>Expense was deleted successfully</value>
  </data>
  <data name="ChangePassword" xml:space="preserve">
    <value>Change Password</value>
  </data>
  <data name="ErrorPassword3" xml:space="preserve">
    <value>Password have to have minimun 6 characters</value>
  </data>
  <data name="ErrorExpenseType" xml:space="preserve">
    <value>You must select an expense type</value>
  </data>
  <data name="Loading" xml:space="preserve">
    <value>Loading...</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="EmailPlaceHolder" xml:space="preserve">
    <value>Write your email</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="PasswordPlaceHolder" xml:space="preserve">
    <value>Write your password</value>
  </data>
  <data name="ForgotPassword" xml:space="preserve">
    <value>Forgot your password?</value>
  </data>
  <data name="StartDate" xml:space="preserve">
    <value>Start Date</value>
  </data>
  <data name="EndDate" xml:space="preserve">
    <value>End Date</value>
  </data>
  <data name="Document" xml:space="preserve">
    <value>Document</value>
  </data>
  <data name="DocumentPlaceHolder" xml:space="preserve">
    <value>Write your document number</value>
  </data>
  <data name="FirstName" xml:space="preserve">
    <value>First Name</value>
  </data>
  <data name="FirstNamePlaceHolder" xml:space="preserve">
    <value>Write your first name</value>
  </data>
  <data name="LastName" xml:space="preserve">
    <value>Last Name</value>
  </data>
  <data name="LastNamePlaceHolder" xml:space="preserve">
    <value>Write your last name</value>
  </data>
  <data name="Phone" xml:space="preserve">
    <value>Phone Number</value>
  </data>
  <data name="PhonePlaceHolder" xml:space="preserve">
    <value>Write your phone number</value>
  </data>
  <data name="ConfirmPassword" xml:space="preserve">
    <value>Confirm Password</value>
  </data>
  <data name="Role" xml:space="preserve">
    <value>Register as</value>
  </data>
  <data name="RolePlaceHolder" xml:space="preserve">
    <value>Select a role</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="CityVisited" xml:space="preserve">
    <value>City visited</value>
  </data>
  <data name="CityVisitedPlaceHolder" xml:space="preserve">
    <value>City you've visited</value>
  </data>
  <data name="ExpenseType" xml:space="preserve">
    <value>Expense type</value>
  </data>
  <data name="Details" xml:space="preserve">
    <value>Details of the expense</value>
  </data>
  <data name="DetailsPlaceHolder" xml:space="preserve">
    <value>About my expense </value>
  </data>
  <data name="Value" xml:space="preserve">
    <value>Value</value>
  </data>
  <data name="Date" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="DeleteTripMessage" xml:space="preserve">
    <value>Do you want to delete this trip</value>
  </data>
  <data name="EmailConfirm" xml:space="preserve">
    <value>Write your email to confirm</value>
  </data>
  <data name="DeleteExpenseMessage" xml:space="preserve">
    <value>Do you want to delete this expense</value>
  </data>
  <data name="CurrentPassword" xml:space="preserve">
    <value>Current Password</value>
  </data>
  <data name="NewPassword" xml:space="preserve">
    <value>New Password</value>
  </data>
</root>